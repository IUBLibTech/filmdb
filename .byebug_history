exit
po
c
exit
info args
f
show
h
??
?
@physical_object.specific.actable
new_one.acting_as
new_one
@physical_object
@physical_object.specific
@physical_object.specific.actable
n
specific_to_delete.created_at
specific_to_delete.changed?
c
specific_to_delete
exit
@physical_object.acting_as
@physical_object.medium
@physical_object
exit
PhysicalObject.where(iu_barcode: value).first.specific.id
record
PhysicalObject.where(iu_barcode: value).size
PhysicalObject.where(iu_barcode: value)
value
ApplicationHelper.valid_barcode?(value)
record
assigned
c
assigned
record
c
exit
error
n
User.current_user_object
c
n
params
s_medium
o_medium
exit
@success
exit
(k.to_s << "=").to_sym
acting_as.send(:iu_barcode)
acting_as.send(:iu_barcode, args[k])
acting_as.send(k, args[k])
args[k]
ags[k]
k
exit
args.is_a? Hash
args
exit
args
args[a]
a
c
a
args
a
exit
n
args
exit
args
args.class
a
a.is_a? Symbol
exit
args
exit
c
@po.medium == 'Film'
exit
@po.medium == 'Film'
exit
@success
exit
error.backtrace
error
n
c
action_name
c
action_name
c
action_name
c
action_name
c
action_name
exit
args[a]
a
params[:physical_object]
c
new_one.titles.size
c
@physical_object.acting_as
@physical_object
request.method
request.post?
request.post
request.request_method
request.patch?
Request::POST
Request::post
Request.post
Request.POST
request.class
request.request_method
request_method
request.method
request.method?
request.post?
request.get?
c
request.post?
request.get?
exit
params
c
@physical_object
c
params
exit
params.keys
exit
@cv
args.each do |a| puts a end
args
c
new_one.titles
exit
new_one.physical_object_titles
params[:physical_object]
c
new_one.titles.size
c
@physical_object.acting_as
@physical_object
request.method
request.post?
request.post
request.request_method
request.patch?
Request::POST
Request::post
Request.post
Request.POST
request.class
request.request_method
request_method
request.method
request.method?
request.post?
request.get?
c
request.post?
request.get?
exit
params
c
@physical_object
c
params
exit
params.keys
exit
@cv

