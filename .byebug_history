c
new_physical_object_path
new_physical_objects_path
physical_objects_path
action_name
c
url
c
@physical_object.titles_text
@physical_object.current_location
@physical_object.current_location == WorkflowStatus::MOLD_ABATEMENT
@physical_object.specific.has_attribute?(:mold)
@physical_object.specific.
@physical_object
c
@physical_object.acting_as.save
params
@physical_object.acting_as.actable_type
@physical_object.acting_as
@physical_object
exit
params[:medium_changed]
exit
c
@physical_object.alternative_title
exit
PO_ONLY_ATTRIBTUES.include?(p.parameterize.to_sym)
p
PO_ONLY_ATTRIBTUES.include?(p)
c
PO_ONLY_ATTRIBTUES.include?(p)
@physical_object.send(p+"=", params[class_sym][p])
@physical_object.send(p.underscore.parameterize.to_sym, params[class_sym][p])
@physical_object[:titles_text]
@physical_object.titles_text
@physical_object
@physical_object.titles
@physical_object
@physical_object[:title_text]
@physical_object[p]
p
c
new_po.class
exit
class_sym
new_po.class
exit
new_po
params[:medium_changed]
exit
params[:video][:alternative_title]
@physical_object.alternative_title
exit
hash
c
hashc
hash.permit
hash
n
hash
exit
hash
n
exit
clear
eexit
medium
params
c
exit
hash.permit
hash.permitted= true
hash.permitted?
hash.permitted
hash
c
hash
exit
hash
hahs
h = params.clone
params
h = params.clone
params.clone
hash
c
exit
form_for @physical_object
po_only_params
@physical_object
new_po.iu_barcode
n
new_po.iu_barcode
new_po
exit
:one_word.to_s.capitalize
medium.to_s.capitalize
medium.to_s.upcase
medium.to_s
medium
new_po
exit
@physical_object
params[:medium_changed]
params
c
params
c
exit
@physical_object
c
exit
c
n
c
new_po
n
exit
params[:video][:medium].downcase.parameterize.underscore.to_sym
params[:video][:medium].downcase.parameterize.underscore
params[:medium_changed]
params[:video][:medium]
params
c
params[:medium_changed]
exit
c
params[:medium_changed]
params[:medium_chnaged]
params[:medium_types]
params
exit
c
@physical_object.reload
@physical_object.save
@physical_object.medium = 'Film'
@physical_object.medium
@physical_object
physical_object_specific_medium
c
@physical_object
exit
@physical_object
@physical_object.size
c
ControlledVocabulary.physical_object_cv(@physical_object.medium)
@physical_object.medium
c
@cv
c
body
exit
params
params[:physical_object]
params[:physical_object][:current_workflow_status]
(params[:physical_object][:current_workflow_status]
c
@physical_object
c
@physical_object.medium
c
ControlledVocabulary.physical_object_cv(@physical_object.medium)[:mold]
c
ControlledVocabulary.physical_object_cv(@physical_object.medium)[:mold]
c
ControlledVocabulary.physical_object_cv(@physical_object.medium)[:mold]
c
ControlledVocabulary.physical_object_cv(@physical_object.medium)[:mold]
ControlledVocabulary.physical_object_cv(@physical_object.medium)
exit
params[:physical_object][:iu_barcode]
params
exit
@physical_object
c
"physical_objects/#{physical_object_specific_medium}/metadata_editable_js"
c
"physical_objects/#{physical_object_specific_medium}/metadata_editable_js"
c
"physical_objects/#{physical_object_specific_medium}/metadata_editable_js"
c
exit
t.physical_objects.first.specific
t.physical_objects
p
p.class
p.actable
p.specific
c
@physical_object.unit_id
exit
@physical_object.unit_id
c
n
params[:video][:unit_id]
c
@physical_object.physical_object_titles.uniq.collect{|t| t.title_id}
c
@physical_object.physical_object_titles.uniq
@physical_object.physical_object_titles.uniq.pluck[:title_id]
exit
@physical_object.physical_object_titles.uniq
c
@physical_object.physical_object_titles.collect{|pt| pt.title_id}
@physical_object.physical_object_titles
@physical_object.actual_title_ids
c
exit
@physical_object.physical_object_titles
@physical_object.actual_title_ids
Title.find(178477)
SELECT  `titles`.* FROM `titles` WHERE `titles`.`id` = 178477 LIMIT 1
@physical_object.actual_title_ids
exit
params[:physical_object]
params[@physical_object.medium.downcase.parameterize.underscore.to_sym]
c
@physical_object.physical_object_titles.collect { |t| t.title_id }.join(',')
@physical_object.physical_object_titles
c
@physical_object.physical_object_titles
n
c
@physical_object.physical_object_titles
@physical_object.titles
n
@physical_object.titles
exit
@physical_object.titles
@physical_object
c
n
c
params[:medium_changed]
exit
@cv
exit
self.medium
[Film, Video].include?(self.specific.class)
self.specific.class
self.specific
exit
request.get?
request.post?
params[:medium_changed]
params
exit
params
exit
c
params[:original_action]
@physical_object
n
params
medium
n
