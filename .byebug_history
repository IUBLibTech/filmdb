c
@physical_object
c
row_data[headers[k]]
HEADERS_TO_ASSIGNER[k]
exit
c
row_data[headers[k]]
row_data[headers[k]
HEADERS_TO_ASSIGNER[k]
c
row_data[headers[k]]
HEADERS_TO_ASSIGNER[k]
c
HEADERS_TO_ASSIGNER[k]
exit
c
HEADERS_TO_ASSIGNER[k]
row_data[headers[k]]
row_data[2]
headers[k]
c
validate_physical_object(xlsx.row(row), headers)
c
exit
validate_physical_object(xlsx.row(row), headers)
c
bad_header
bad_headers
c
headers
c
bad_header
c
sss
c
User.authenticate(@resp_user)
c
User.valid_usernames
User.authenticate(@resp_user)
@resp_user
exit
@resp.slice(5,@nlength)
@resp.length - 7
@resp_user=@resp.slice(5,@nlength)
@resp_user
User.authenticate(@resp_user)
@resp.slice(0,3)
@resp
c
row_data
row data
po.title
po
c
validated_physical_objects[96]
validated_physical_objects[96].valid?
exit
error_rows[97].messages.keys
error_rows[97].messages
error_rows[96].messages
error_rows[96][:messages]
error_rows[96]
error_rows.keys
error_rows[0]
error_rows
exit
validated_physical_objects[97].valid?xit
validated_physical_objects
error_rows.size
error_rows
c
validated_physical_objects[97].valid?
validated_physical_objects[97]
validated_physical_objects.size
xlsx.rows.size
xlsx
xslx
error_rows
xlsx.rows.size
xlsl
c
return
c
po.errors[:title]
po.errors
c
po.valid?
c
xlsx.row(1)
xlsx[1]
xlsx
c
exit
row_data
row_data[headers['Date Inventoried*']]
headers['Date Inventoried*']
c
date
c
root_url
return
c
headers['Accompanying Documentation']
c
headers['Accompanying Documentation']
xlsx.row(row)[headers['Accompanying Documentation']]
c
@file.blank?
@file
c
current_username
signed_in?
