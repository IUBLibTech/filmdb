<table>
	<tbody>
	<tr>
		<th>Scan IU Barcode</th>
		<td>
      <input type="text" id="iu_barcode">
		</td>
	</tr>
	</tbody>
</table>
<br>
<div id="finder_table">
  <p><b>Scan your "found" IU Barcode above</b></p>
</div>
<p>
  A couple things to note: at this point <i>any</i> Missing PO can be scanned and will appear. As things get fleshed out
  though, the rules below will be enforced. This is because a Component Group belongs to a <b>single</b> Title - but
  PO's can have <b>multiple</b> titles. What this means in practice is that Users wanting to "find" several POs at once
  can only do so with POs that have Titles in common with one another. If a User wants to "find" several POs that <b>don't</b>
  have a common Title, even if they are simply returning them to storage, these each have to be done separately: scan a
  single barcode and process, then scan the next barcode and process, etc.
  <br>
  Here are the Rules/Logic:
</p>
<ul style="list-style: circle; margin-left: 2rem">
  <li>The first scanned PO's Title(s) are noted</li>
  <li>The next scanned PO <b>must</b> have at least one Title in common with the first scanned PO to be accepted. Shared Titles are noted (a mathematical intersection).</li>
  <li>All subsequent scans must have at least one Title in the noted Shared Titles in the previous step. Shared Titles are recalculated (title intersection of all POs)</li>
  <li>Creating a CG involves selecting from the list of Titles that all PO's have in common and from... </li>
  <li>Each POs that is select "Inject into Workflow" above will appear here.</li>
  <li>CG digitization settings can be set, as well as where in Workflow each PO should be located. These Workflow locations
    will be limited based on the Component Group type selected in the CG portion</li>
  <li>If "Return to Storage" is selected above (after having previously selected "Inject..."), that PO will be removed from
    this list
  </li>
  <li>
    Finally, when the User is done (form is submitted), the page will display a detailed message of:
    <ul style="list-style: decimal; margin-left: 2rem">
      <li>Where everything is/should be located in Workflow</li>
      <li>If a CG was created, the title it was created for</li>
      <li>If a CG was created, all POs that belong to that CG</li>
      <li>I'm also toying with the idea of simply redirecting the User to the CG edit page for what was just created so they can review.
        This can also possibly get them to other relevant metadata, but I'm not sure just yet...</li>
    </ul>
  </li>
</ul>

<script type="text/javascript" charset="utf-8">
  let scan_barcodes = [];
	$(document).ready(function() {
      let lookup_url = "<%= ajax_mark_found_lookup_path %>"
	    hookBarcodeValidators();
	    $('#iu_barcode').on("input", function() {
          let bc = $('#iu_barcode').val();
          if (isValidBarcode(bc, false) && !scan_barcodes.includes(bc)) {
              scan_barcodes.push(bc)
              $.ajax({
                  url: lookup_url,
                  method: "GET",
                  data: {"barcodes" : scan_barcodes},
                  error: function (jqXHR, textStatus, errorThrown) {
                      swal({
                          title: 'Ajax Error',
                          text: 'An error occurred while making an AJAX call. When this dialog closes, Filmdb will redirect to the underlying error page. Please screen shot the error page and forward it to Carmel.'
                      }, function () {
                          window.location.replace(lookup_url)
                      });
                  },
                  success: function (result) {
                      $('#finder_table').replaceWith(result);
                      hookInjectables();
                  }
              });
          }
       })
	});
	function removeBadBcs(bcs) {
	    for (let i = 0; i < bcs.length; i++) {
          let index = scan_barcodes.indexOf(bcs[i]);
          scan_barcodes.splice(index, 1);
      }
  }

  function removePO(po_id) {
      let tr = $("tr#po_"+po_id)
      let remove_bc = $("tr#po_"+po_id+" > td:first-child").text();
      removeBadBcs([remove_bc])
      tr.remove();
  }

  function hookInjectables() {
      $('.injectable').off("change").on("change",
          function() {
              let el = $(this);
          }
      );
  }
</script>